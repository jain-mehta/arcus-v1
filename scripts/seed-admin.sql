-- Seed Admin User and RBAC Permissions
-- Admin Email: admin@arcus.local
-- Admin Password: Admin@123456

-- 1. Create organization if not exists
INSERT INTO organizations (id, slug, name, is_active, created_at, updated_at, db_connection_string, settings)
SELECT 
  'org-arcus-main'::uuid,
  'arcus-main',
  'Arcus - Main Organization',
  true,
  NOW(),
  NOW(),
  'postgresql://postgres:password@db.supabase.co:5432/postgres',
  '{}'::jsonb
WHERE NOT EXISTS (SELECT 1 FROM organizations WHERE slug = 'arcus-main');

-- 2. Create admin role with full permissions
INSERT INTO roles (id, organization_id, name, description, permissions, is_system_role, created_at, updated_at)
SELECT
  'role-admin-arcus'::uuid,
  'org-arcus-main'::uuid,
  'Administrator',
  'Full system access and control',
  '{
    "dashboard": { "view": true, "manage": true },
    "users": { "view": true, "create": true, "edit": true, "delete": true, "manage": true },
    "roles": { "view": true, "create": true, "edit": true, "delete": true, "manage": true },
    "permissions": { "view": true, "manage": true },
    "store": { "view": true, "create": true, "edit": true, "delete": true, "manage": true, "bills": true, "invoices": true, "viewPastBills": true },
    "sales": { "view": true, "create": true, "edit": true, "delete": true, "manage": true, "quotations": true, "leads": true, "orders": true, "customers": true },
    "vendor": { "view": true, "create": true, "edit": true, "delete": true, "manage": true, "purchase_orders": true, "invoices": true, "communication": true },
    "inventory": { "view": true, "create": true, "edit": true, "delete": true, "manage": true, "viewStock": true, "editStock": true, "qrCode": true },
    "hrms": { "view": true, "create": true, "edit": true, "delete": true, "manage": true, "employees": true, "attendance": true, "leaves": true, "payroll": true, "recruitment": true },
    "reports": { "view": true, "export": true, "manage": true },
    "settings": { "view": true, "edit": true, "manage": true },
    "audit": { "view": true, "manage": true },
    "admin": { "access": true }
  }'::jsonb,
  true,
  NOW(),
  NOW()
WHERE NOT EXISTS (SELECT 1 FROM roles WHERE name = 'Administrator' AND organization_id = 'org-arcus-main'::uuid);

-- 3. Create admin user (password hash is for Admin@123456 - needs to be generated by application)
INSERT INTO users (id, email, password_hash, full_name, phone, is_active, is_email_verified, created_at, updated_at)
SELECT
  'user-admin-arcus'::uuid,
  'admin@arcus.local',
  '$2b$10$8R9.qP1mZWWqqq1KqKj1KOyZ5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z', -- placeholder - will be updated by app
  'System Administrator',
  '+1-800-ADMIN-00',
  true,
  true,
  NOW(),
  NOW()
WHERE NOT EXISTS (SELECT 1 FROM users WHERE email = 'admin@arcus.local');

-- 4. Assign admin role to admin user
INSERT INTO user_roles (id, user_id, organization_id, role_id, created_at, updated_at)
SELECT
  'user_role-admin-arcus'::uuid,
  'user-admin-arcus'::uuid,
  'org-arcus-main'::uuid,
  'role-admin-arcus'::uuid,
  NOW(),
  NOW()
WHERE NOT EXISTS (
  SELECT 1 FROM user_roles 
  WHERE user_id = 'user-admin-arcus'::uuid 
  AND role_id = 'role-admin-arcus'::uuid
);

-- Verification queries
SELECT 'User created:' as status, email, is_active, is_email_verified FROM users WHERE email = 'admin@arcus.local';
SELECT 'Role created:' as status, name, is_system_role FROM roles WHERE name = 'Administrator';
SELECT 'User-Role assigned:' as status FROM user_roles WHERE role_id = 'role-admin-arcus'::uuid;
